# -*- coding: utf-8 -*-
"""Data Science project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kjXdtl3hZEi-_-LPVbpO2o3ekAooiO40
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset=pd.read_csv('/content/2014_ebola_CF_labeled_data.tsv',delimiter='\t',quoting=3)

dataset.head()

dataset.shape

print(set(dataset.label))

import re
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
corpus=[]
for i in range(0,1774):
    review=re.sub('[^a-zA-Z]',' ',dataset['tweet_text'][i])
    review=review.lower()
    review=review.split()
    ps=PorterStemmer()
    review=[ps.stem(word) for word in review if not word in set(stopwords.words('english'))]
    review=' '.join(review)
    corpus.append(review)

len(corpus)

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer(max_features=8000)
X=cv.fit_transform(corpus).toarray()
y=dataset.iloc[:,2].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.tree import DecisionTreeClassifier
classifier = DecisionTreeClassifier(criterion = 'entropy', random_state = 0)
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)

from sklearn import metrics
print(metrics.classification_report(y_test, y_pred, digits=9))

from sklearn.ensemble import RandomForestClassifier
rf=RandomForestClassifier()
rf.fit(X_train, y_train)

y_pred = rf.predict(X_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_pred)

print(cm)

from sklearn import metrics
print(metrics.classification_report(y_test, y_pred, digits=9))

